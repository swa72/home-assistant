
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

homeassistant:
  customize: !include customize.yaml
  customize_glob:
    "binary_sensor.fenster*":
      device_class: window

#
# check out https://www.home-assistant.io/lovelace/dashboards-and-views/
#
lovelace:
  mode: yaml
  # resources:
    # - url: /hacsfiles/lovelace-auto-entities/auto-entities.js
      # type: module

#
#
#
# logger:
  # default: info
  # logs:
    # homeassistant.components.shelly: debug
    # aioshelly: debug 
# #
# Text to speech
#
tts:
  - platform: google_translate
#
# check out https://www.home-assistant.io/integrations/fritz/
# known_devices.yaml automagically populated; names, icons added manually
#
# check out https://gcobb321.github.io/icloud3_docs/#/chapters/1-installing-starting-icloud3
#
device_tracker:
  - platform: fritz
    host: 192.168.178.1
    consider_home: 180
    interval_seconds: 12
  - platform: icloud3
    username: !secret icloud_name
    password: !secret icloud_password
    tracking_method: famshr
# for us europeans
    unit_of_measurement: km
    track_devices:
      - swaiPhone
      - jphone
      - iphone_von_anna
#
#
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
notify: !include notifications.yaml
sensor: !include sensors.yaml

#
# duckdns
# 
http:
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
# dont forget the next line or https will not work :-/
# later: maybe not, log bitches about base_url being deprecated
#  base_url: https://swa.duckdns.org
 
#
# Alle Rolladen im Schlafzimmer
#
cover:
  - platform: group
    name: Eltern-Schlafzimmer
    entities:
     - cover.shellyswitch25_10521cf997bf
     - cover.shellyswitch25_483fda4d0633
    # icon_template: >-
      # {% if state_attr('cover.eltern_schlafzimmer', 'current_position') | float > 0 %}
        # mdi:shutter-open
      # {% else %}
        # mdi:shutter
      # {% endif %}
#
# garage door
#
# there is only one button (!) so we only use turn_on
  - platform: template
    covers:
      garage_door:
        device_class: garage
        friendly_name: "Garage Door"
# old        
#        value_template: "{{ states('binary_sensor.garagentor_input') }}"
        value_template: "{% if is_state('binary_sensor.garagentor_input', 'on') %}closed{% else %}open{% endif %}"
        open_cover:
          service: switch.turn_on
          data:
            entity_id: switch.garagentor
        close_cover:
          service: switch.turn_on
          data:
            entity_id: switch.garagentor
        stop_cover:
          service: switch.turn_on
          data:
            entity_id: switch.garagentor
        icon_template: >-
          {% if is_state('binary_sensor.garagentor_input','off') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}

# #
# # Haustür, nur fürs UI
# #
  # - platform: template
    # sensors:
      # ui_haustuer:
      # value_template: >-
        # {{ is_state("sun.sun", "above_horizon") }}
      # icon_template: >-
        # {% if is_state('binary_sensor.garagentor_input','off') %}
        # mdi:door-open
        # {% else %}
        # mdi:door
        # {% endif %}

#
# alerts
#
alert:
  garage_alert:
    name: Garage ist (zu lange) offen
    done_message: Garage ist geschlossen
    entity_id: binary_sensor.garagentor_input
    state: 'off' # Optional, 'on' is the default value
    repeat: 
      - 30
      - 15
    can_acknowledge: true # Optional, default is true
    skip_first: true # Optional, false is the default
# message is automagically set to name above
#    message: 
    notifiers:
      - urgent_notification
#
#
#
  haustur_alert:
    name: "Haustür ist (zu lange) offen. Es hat {{ state_attr('weather.homeassistant', 'temperature') }} Grad draußen."
    done_message: Haustür ist geschlossen
    entity_id: binary_sensor.haustur
    state: 'on' # Optional, 'on' is the default value
    repeat: 
      - 3
      - 5
    can_acknowledge: true # Optional, default is true
    skip_first: true # Optional, false is the default
    notifiers:
      - urgent_notification
#
#
#
  dachfenster_alert:
    name: "Dachfenster offen und Vorhersage sagt {{ state_attr('weather.homeassistant','forecast')[0].precipitation }}mm Regen."
    done_message: Dachfenster sind geschlossen
    entity_id: binary_sensor.dachfenster_offen_regentag
    state: 'on' # Optional, 'on' is the default value
    repeat: 
      - 3
    can_acknowledge: true # Optional, default is true
#    skip_first: true # Optional, false is the default
    notifiers:
      - urgent_notification
#
#
#
  fake_alert:
    name: "fake name"
    done_message: fake done
    entity_id: sensor.swa_fake
    state: 'on' # Optional, 'on' is the default value
    repeat: 
      - 1
    can_acknowledge: true # Optional, default is true
#    skip_first: true # Optional, false is the default
    notifiers:
      - urgent_notification
#
#
#
  haus_offen_alert:
    name: "Irgendeine Außentür/Fenster offen und keiner zuhause."
    done_message: Problem mit offenem Haus gelöst.
    entity_id: binary_sensor.haus_offen_keiner_zuhause
    state: 'on' # Optional, 'on' is the default value
    repeat: 
      - 5
    can_acknowledge: true # Optional, default is true
#    skip_first: true # Optional, false is the default
    notifiers:
      - urgent_notification
