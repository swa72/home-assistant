#
# Configuration | YAML configuration reloading | Reload Template Entities
#
- platform: template
  sensors:

#
#
#
    camera1_motion:
      friendly_name: "iPhone Camera - Movement"
      device_class: motion
      value_template: "{{ is_state('input_boolean.camera1_motion_detected', 'on') }}"
#
#
#      
    garagentur:
      friendly_name: "Garagentür"
      device_class: garage_door
      # off = closed; on = open
      value_template: "{{ is_state('cover.garage_door', 'open') }}"
#
#
#      
    dunkel_draussen:
      friendly_name: "Dunkel draußen"
      value_template: >-
        {% if now().hour > 12 %}
        {{ state_attr('sun.sun', 'elevation')|float < 3 }}
        {% else %}
        {{ state_attr('sun.sun', 'elevation')|float < -3 }}
        {% endif %}
#
#
#
    nachts_tuerauf:
      friendly_name: "Nachts und Tuer geht auf"
      value_template: >-
        {% set p0 = states('group.tueren') == "on" %}
        {% set p1 = now().hour > 21 or now().hour < 6 %}
        {{ 'true' if p0 and p1 else 'false' }}
      attribute_templates:
        offenetuer: "{% set w = expand( 'group.tueren' ) | selectattr('state', 'eq', 'on') | map(attribute='name') | list %}{{ w }}"
#
# false if not evening
# false if closed
#
    abend_eg_wohnzimmer_tuer_zu:
      friendly_name: "On, wenn Abend und EG Wohnzimmertür geschlossen."  
      value_template: >-
        {% set p0 = now().hour > 20 or now().hour < 6 %}
        {% set p1 = states('binary_sensor.eg_wohnzimmer_tuer') == "off" %} 
        {{ 'true' if p0 and p1 else 'false' }}
#
#
#
    sun_up:
      friendly_name: "On, wenn Sonne aufgegangen."
      value_template: >-
       {{ state_attr('sun.sun', 'elevation')|float > 0 }}
#
# Using openweathermap forecast
#
    rainy_day:
      friendly_name: On, wenn Regen in den nächsten 4h
      value_template: >-
        {% if is_state('weather.openweathermap', 'Unavailable') %}
        {{ false }}
        {% else %}
        {% set p0 = state_attr('weather.openweathermap', 'forecast')[0].condition == "rainy" %}
        {% set p1 = state_attr('weather.openweathermap', 'forecast')[1].condition == "rainy" %}
        {% set p2 = state_attr('weather.openweathermap', 'forecast')[2].condition == "rainy" %}
        {% set p3 = state_attr('weather.openweathermap', 'forecast')[3].condition == "rainy" %}
        {{ true if p0 or p1 or p2 or p3 else false }}
        {% endif %}
#
# 
#
    dachfenster_offen_regentag:
      friendly_name: On, wenn Regen kommt und Dachfenster offen
      value_template: >-
        {% set p0 = states('group.dachfenster') == 'on' %}
        {% set p1 = states('binary_sensor.rainy_day') == 'on' %}
        {{ 'on' if p0 and p1 else 'off' }}

#
# set the device class in customize.yaml
#
# returns True or False
#
    people_home:
      friendly_name: On, wenn min. eine Person im Haus
      value_template: >-
         {{ is_state('person.stefan', 'home') or
            is_state('person.julia', 'home') or
            is_state('person.anna', 'home') }}
#
#
#
    haus_offen_keiner_zuhause:
      friendly_name: On, wenn keiner Zuhause ist und ein Öffnung offen ist.
      value_template: >-
         {% set p0 = states('binary_sensor.people_home') == "off" %}
         {% set p1 = states('group.oeffnungen') == "on" %}
         {{ 'true' if p0 and p1 else 'false' }}

#
# binary_sensor.su_xp1654_door_lock = on -> locked
#
    volvo_zuhause_und_offen:
      friendly_name: On, wenn Volvo zuhause und nicht abgeschlossen ist.
      value_template: >-
         {% set p0 = states('device_tracker.volvo_su_xp1654') == "home" %}
         {% set p1 = states('binary_sensor.su_xp1654_door_lock')== "off" %}
         {{ 'true' if p0 and p1 else 'false' }}
#
# 10 Watt not sufficient
#
    stefan_working_in_office:
      friendly_name: On, wenn Stefan im Office ist
      value_template: >-
         {% set p0 = states('sensor.shellyp_dg_stefan_tisch_power') | float > 45 %}
         {{ 'true' if p0 else 'false' }}
#
#
#
    humidity_elternschlaf:
      friendly_name: "Elternschlafzimmer hat zu hohe Luftfeuchtigkeit"
      value_template: >-
        {% set p0 = states('sensor.multi_og_schlaf_humidity') | float >= 50 %}
        {{ 'true' if p0 else 'false' }}
#
# longer than 20m over 50
#
    humidity_elternbad:
      friendly_name: "Elternbad hat zu hohe Luftfeuchtigkeit"
      value_template: >-
        {% set p0 = states('sensor.multi_og_elternbad_humidity') | float >= 50 %}
        {{ 'true' if p0 else 'false' }}
#
#
#
    humidity_konstantin:
      friendly_name: "Konstantins Zimmer hat zu hohe Luftfeuchtigkeit"
      value_template: >-
        {% set p0 = states('sensor.multi_og_konstantin_humidity') | float > 46 %}
        {{ 'true' if p0 else 'false' }}
#
#
#
    humidity_clara:
      friendly_name: "Claras Zimmer hat zu hohe Luftfeuchtigkeit"
      value_template: >-
        {% set p0 = states('sensor.multi_og_clara_humidity') | float >= 45 %}
        {{ 'true' if p0 else 'false' }}
#
#
#
- platform: ping
  name: emsesp
  host: 192.168.178.90
- platform: ping
  name: gas
  host: 192.168.178.99
- platform: ping
  name: roofac
  host: 192.168.178.44
- platform: ping
  name: shelly1_garage
  host: 192.168.178.59
- platform: ping
  name: shelly25_garage
  host: 192.168.178.89
- platform: ping
  name: shellys_keller_pumpe_treppe
  host: 192.168.178.84
- platform: ping
  name: shellys_poolpump
  host: 192.168.178.26
- platform: ping
  name: shellys_wama
  host: 192.168.178.87
- platform: ping
  name: sleepac
  host: 192.168.178.45
  
- platform: rest
  resource: !secret livingroom_motion_url
  name: Motion Livingroom
  scan_interval: 5
  value_template: "{{ value_json[0].value.state }}"
  device_class: motion