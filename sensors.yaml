#
# Configuration | YAML configuration reloading | Reload Template Entities
#

- platform: uptime
#
#
#
- platform: fritzbox_callmonitor
  name: FritzPhone
  host: 192.168.178.1
  username: hacallmon
  password: !secret hacallmon_password
  phonebook: 0
  prefixes:
    - '+49'
    - '+496221'
    - '06221'
#
#
#
- platform: systemmonitor
  resources:
    - type: memory_use_percent
    - type: processor_temperature
    - type: last_boot
    - type: load_1m
    - type: load_5m
    - type: load_15m
#
# gives a new entity after restart
#
- platform: template
  sensors:
#
#
#
    solar_angle:
      friendly_name: "Sun angle"
      unit_of_measurement: 'degrees'
      value_template: "{{ state_attr('sun.sun', 'elevation') }}"
#
# fake sensor
#
    swa_fake:
      friendly_name: Fake sensor
      value_template: "off"
#
#
#
    regen_heute:
      friendly_name: met.no Precipitation
      value_template: "{{ state_attr('weather.homeassistant', 'forecast')[0].precipitation }}"
#
#
#
- platform: sql
  db_url: !secret db_url
  queries:
    - name: DB size
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
      column: "value"
      unit_of_measurement: kB
#
#
#
- platform: template
  sensors:
    heating_differential:
      friendly_name: "Flow-Ret diff"
      unit_of_measurement: '°C'
      icon_template: 'mdi:format-align-middle'
      value_template: "{{ (states('sensor.boiler_current_flow_temperature') | float - states('sensor.boiler_return_temperature') | float) | round(1) }}"
#
#
#
- platform: influxdb
  host: a0d7b954-influxdb
  port: 8086
  username: homeassistant
  password: !secret influxdb
  queries:
    - name: InfluxDb DB Size
      unit_of_measurement: MB
      value_template: '{{ (value | float / 1024 /1024) | round(1) }}'
      group_function: sum
      measurement: '"monitor"."shard"'
      database: _internal
      where: 'time > now() - 10s'
      field: diskBytes

#
# weather forecasts for tomorrow
#
- platform: template
  sensors:
    swaweathermetno:
      friendly_name: "Met.no Forecast condition"
      value_template: "{{ state_attr('weather.homeassistant', 'forecast')[0].condition }}"

- platform: template
  sensors:
    swaweathermetno_condition:
      friendly_name: "Met.no Forecast condition"
      value_template: "{{ state_attr('weather.homeassistant', 'forecast')[0].condition }}"

- platform: template
  sensors:
    swaweathermetno_templow:
      friendly_name: "Met.no Forecast templow"
      value_template: "{{ state_attr('weather.homeassistant', 'forecast')[0].templow }}"

- platform: template
  sensors:
    swaweathermetno_temphigh:
      friendly_name: "Met.no Forecast temphigh"
      value_template: "{{ state_attr('weather.homeassistant', 'forecast')[0].temperature }}"
#
#
#
- platform: template
  sensors:
    heating_room_0wz:
      friendly_name: "0.EG Wohnzimmer"
      value_template: >-
        {% if states('sensor.thermostat_hc1_current_room_temperature') | float <= 21.0 %}
          too-cold
        {% elif states('sensor.thermostat_hc1_current_room_temperature') | float >= 23.0 %}
          too-warm
        {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_room_2stefan:
      friendly_name: "2.DG Stefan"
      value_template: >-
        {% if states('sensor.multi_dg_stefan_temperature') | float <= 21.0 %}
          too-cold
        {% elif states('sensor.multi_dg_stefan_temperature') | float >= 22.0 %}
          too-warm
        {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_room_1elternschlaf:
      friendly_name: "1.OG Elternschlaf"
      value_template: >-
        {% if states('sensor.multi_og_schlaf_temperature') | float <= 19.0 %}
          too-cold
        {% elif states('sensor.multi_og_schlaf_temperature') | float >= 21.0 %}
          too-warm
        {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_room_1elternbad:
      friendly_name: "1.OG Elternbad"
      value_template: >-
        {% if states('sensor.multi_og_elternbad_temperature') | float <= 21.0 %}
          too-cold
        {% elif states('sensor.multi_og_elternbad_temperature') | float >= 24.0 %}
          too-warm
        {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_room_1clara:
      friendly_name: "1.OG Clara"
      value_template: >-
        {% if states('sensor.multi_og_clara_temperature') | float <= 20.0 %}
          too-cold
        {% elif states('sensor.multi_og_clara_temperature') | float >= 22.0 %}
          too-warm
        {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_room_1konstantin:
      friendly_name: "1.OG Konstantin"
      value_template: >-
        {% if states('sensor.multi_og_konstantin_temperature') | float <= 19.0 %}
          too-cold
        {% elif states('sensor.multi_og_konstantin_temperature') | float >= 22.0 %}
          too-warm
        {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_room_2anna:
      friendly_name: "2.DG Anna"
      value_template: >-
        {% if states('sensor.multi_dg_anna_temperature') | float <= 21.0 %}
          too-cold
        {% elif states('sensor.multi_dg_anna_temperature') | float >= 22.0 %}
          too-warm
        {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_room_0egburo:
      friendly_name: "0.EG Büro"
      value_template: >-
        {% if states('sensor.multi_eg_buro_temperature') | float <= 19.0 %}
          too-cold
        {% elif states('sensor.multi_eg_buro_temperature') | float >= 22.0 %}
          too-warm
        {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_hc3:
      friendly_name: "Circuit HC3"
      value_template: >-
        {% set p0 = states('sensor.heating_room_2anna') == "too-warm" %}
        {% set p1 = states('sensor.heating_room_2anna') == "ok" %}
        {% set p2 = states('sensor.heating_room_2anna') == "too-cold" %}
        {% set p3 = states('sensor.heating_room_2stefan') == "too-warm" %}
        {% set p4 = states('sensor.heating_room_2stefan') == "ok" %}
        {% set p5 = states('sensor.heating_room_2stefan') == "too-cold" %}
        {% if (p0 or p3) %}
          too-warm
        {% elif (p2 or p5) %}
          too-cold
         {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_hc1:
      friendly_name: "Circuit HC1"
      value_template: >-
        {% set p0 = states('heating_room_0egburo') == "too-warm" %}
        {% set p1 = states('heating_room_0egburo') == "ok" %}
        {% set p2 = states('heating_room_0egburo') == "too-cold" %}
        {% set p3 = states('heating_room_0wz') == "too-warm" %}
        {% set p4 = states('heating_room_0wz') == "ok" %}
        {% set p5 = states('heating_room_0wz') == "too-cold" %}
        {% set p6 = states('heating_room_1clara') == "too-warm" %}
        {% set p7 = states('heating_room_1clara') == "ok" %}
        {% set p8 = states('heating_room_1clara') == "too-cold" %}
        {% set p9 = states('heating_room_1konstantin') == "too-warm" %}
        {% set p10 = states('heating_room_1konstantin') == "ok" %}
        {% set p11 = states('heating_room_1konstantin') == "too-cold" %}
        {% if (p2 or p5 or p8 or p11) %}
          too-cold
        {% elif (p3) %}
          too-warm
         {% else %}
          ok
        {% endif %}
#
#
#
- platform: template
  sensors:
    heating_hc2:
      friendly_name: "Circuit HC2"
      value_template: >-
        {% set p0 = states('sensor.heating_room_1elternbad') == "too-warm" %}
        {% set p1 = states('sensor.heating_room_1elternbad') == "ok" %}
        {% set p2 = states('sensor.heating_room_1elternbad') == "too-cold" %}
        {% if (p2) %}
          too-cold
        {% elif (p0) %}
          too-warm
         {% else %}
          ok
        {% endif %}