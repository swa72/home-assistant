alexa_doorbell:
  alias: Alexa Sound
  sequence:
  - service: media_player.play_media
    data:
      entity_id: media_player.stefans_echo_dot
      media_content_type: sound
      media_content_id: amzn_sfx_doorbell_chime_01
  mode: single
alexa_wama_fertig:
  alias: Alexa tts Waschmaschine ist fertig.
  sequence:
  - service: media_player.volume_set
    data:
      volume_level: 0.5
    entity_id: media_player.stefans_echo_dot
  - service: notify.alexa_media
    data:
      target: media_player.stefans_echo_dot
      message: Hallo, die Waschmaschine ist fertig.
      data:
        type: tts
  mode: single
haustur_offnen:
  alias: Haustür öffnen
  sequence:
  - service: hassio.addon_stdin
    data:
      addon: 89275b70_dss_voip
      input:
        call_sip_uri: sip:**1@192.168.178.1
        audio_file_url: https://swa.duckdns.org/local/open_door_short.mp3
        call_duration: '6'
  - delay: 00:00:10
  mode: single
clara_tur_zu_und_leiser:
  alias: Clara Tür zu und leiser
  sequence:
  - service: hassio.addon_stdin
    data:
      addon: 89275b70_dss_voip
      input:
        call_sip_uri: sip:**611@192.168.178.1
        message_tts: Bitte Tür schließen und leiser sein. Danke.
        call_duration: '20'
  mode: single
konstantin_tur_zu_und_leiser:
  alias: Konstantin Tür zu und leiser
  sequence:
  - service: hassio.addon_stdin
    data:
      addon: 89275b70_dss_voip
      input:
        call_sip_uri: sip:**612@192.168.178.1
        message_tts: Bitte Tür schließen und leiser sein. Danke.
        call_duration: '20'
  mode: single
alexa_tts_katzentur_offnen:
  alias: Alexa tts Katzentür öffnen.
  sequence:
  - service: media_player.volume_set
    data:
      volume_level: 0.5
    entity_id: media_player.stefans_echo_dot
  - service: notify.alexa_media
    data:
      target: media_player.stefans_echo_dot
      message: Bitte die Wohnzimmertür für Katzen offen lassen.
      data:
        type: tts
  mode: single
notify_stefan:
  alias: Notify stefan
  sequence:
  - service: notify.mobile_app_swaiphone
    data:
      title: '{{ title }}'
      message: '{{ message }}'
  mode: single
urgent_notify_stefan:
  alias: Notify stefan
  sequence:
  - service: notify.mobile_app_swaiphone
    data:
      title: '{{ title }}'
      message: '{{ message }}'
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 0.3
  mode: single
notify_people_who_are_present:
  alias: Notify people who are present
  sequence:
  - choose:
    - conditions: "{{ is_state('person.stefan', 'home') }}"
      sequence:
      - service: notify.mobile_app_swaiphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  - choose:
    - conditions: "{{ is_state('person.julia', 'home') and is_state('input_boolean.swa_debug_mode', 'off') }}"
      sequence:
      - service: notify.mobile_app_jphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  - choose:
    - conditions: "{{ is_state('person.anna', 'home') and is_state('input_boolean.swa_debug_mode', 'off') }}"
      sequence:
      - service: notify.mobile_app_iphone_von_anna
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  mode: single
notify_people:
  alias: Notify people 
  sequence:
  - choose:
    - conditions: "{{ 1==1 }}"
      sequence:
      - service: notify.mobile_app_swaiphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  - choose:
    - conditions: "{{ 1==1 and is_state('input_boolean.swa_debug_mode', 'off') }}"
      sequence:
      - service: notify.mobile_app_jphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  - choose:
    - conditions: "{{ 1==1 and is_state('input_boolean.swa_debug_mode', 'off') }}"
      sequence:
      - service: notify.mobile_app_iphone_von_anna
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  mode: single
urgent_notify_people_who_are_present:
  alias: Notify people urgently who are present
  sequence:
  - choose:
    - conditions: "{{ is_state('person.stefan', 'home') }}"
      sequence:
      - service: notify.mobile_app_swaiphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  - choose:
    - conditions: "{{ is_state('person.julia', 'home') and is_state('input_boolean.swa_debug_mode', 'off') }}"
      sequence:
      - service: notify.mobile_app_jphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  - choose:
    - conditions: "{{ is_state('person.anna', 'home') and is_state('input_boolean.swa_debug_mode', 'off') }}"
      sequence:
      - service: notify.mobile_app_iphone_von_anna
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  mode: single
urgent_notify_people:
  alias: Notify people urgently
  sequence:
  - choose:
    - conditions: "{{ 1==1 }}"
      sequence:
      - service: notify.mobile_app_swaiphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  - choose:
    - conditions: "{{ 1==1 and is_state('input_boolean.swa_debug_mode', 'off') }}"
      sequence:
      - service: notify.mobile_app_jphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  - choose:
    - conditions: "{{ 1==1 and is_state('input_boolean.swa_debug_mode', 'off') }}"
      sequence:
      - service: notify.mobile_app_iphone_von_anna
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  mode: single
erinnere_stefan_ans_trinken:
  alias: Erinnere Stefan ans Trinken
  sequence:
  - repeat:
      while:
      - condition: state
        entity_id: binary_sensor.stefan_working_in_office
        state: 'on'
      sequence:
      - delay:
          hours: 2
          minutes: 0
          seconds: 0
          milliseconds: 0
      - service: script.notify_stefan
        data:
          title: Hinweis
          message: Trink ein Glas Wasser
  mode: single
