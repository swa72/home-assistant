alexa_doorbell:
  alias: Alexa Sound
  sequence:
  - service: media_player.play_media
    data:
      entity_id: media_player.stefans_echo_dot
      media_content_type: sound
      media_content_id: amzn_sfx_doorbell_chime_01
  mode: single
alexa_wama_fertig:
  alias: Alexa tts Waschmaschine ist fertig.
  sequence:
  - service: media_player.volume_set
    data:
      volume_level: 0.5
    entity_id: media_player.stefans_echo_dot
  - service: notify.alexa_media
    data:
      target: media_player.stefans_echo_dot
      message: Hallo, die Waschmaschine ist fertig.
      data:
        type: tts
  - service: media_player.volume_set
    data:
      volume_level: 0.2
    target:
      entity_id: media_player.stefans_echo_dot
  mode: single
haustur_offnen:
  alias: Haustür öffnen
  sequence:
  - service: hassio.addon_stdin
    data:
      addon: 89275b70_dss_voip
      input:
        call_sip_uri: sip:**1@192.168.178.1:5060
        audio_file_url: https://swa.duckdns.org/local/open_door_short.mp3
        call_duration: '6'
  - delay: 00:00:10
  mode: single
clara_tur_zu_und_leiser:
  alias: Call Clara Tür zu und leiser
  sequence:
  - service: hassio.addon_stdin
    data:
      addon: 89275b70_dss_voip
      input:
        call_sip_uri: sip:**611@192.168.178.1:5060
        message_tts: Bitte Tür schließen und leiser sein. Danke.
        call_duration: '20'
  mode: single
konstantin_tur_zu_und_leiser:
  alias: Call Konstantin Tür zu und leiser
  sequence:
  - service: hassio.addon_stdin
    data:
      addon: 89275b70_dss_voip
      input:
        call_sip_uri: sip:**612@192.168.178.1:5060
        message_tts: Bitte Tür schließen und leiser sein. Danke.
        call_duration: '20'
  mode: single
alexa_tts_katzentur_offnen:
  alias: Alexa tts Katzentür öffnen.
  sequence:
  - service: media_player.volume_set
    data:
      volume_level: 0.5
    entity_id: media_player.stefans_echo_dot
  - service: notify.alexa_media
    data:
      target: media_player.stefans_echo_dot
      message: Bitte die Wohnzimmertür für Katzen offen lassen.
      data:
        type: tts
  mode: single
notify_stefan:
  alias: Notify stefan
  sequence:
  - service: notify.mobile_app_swaiphone
    data:
      title: '{{ title }}'
      message: '{{ message }}'
  mode: queued
  max: 10
notify_parents:
  alias: Notify Julia and Stefan
  sequence:
  - service: notify.mobile_app_swaiphone
    data:
      title: '{{ title }}'
      message: '{{ message }}'
  - service: notify.mobile_app_jphone
    data:
      title: '{{ title }}'
      message: '{{ message }}'
  mode: single
urgent_notify_stefan:
  alias: Notify stefan critically
  sequence:
  - service: notify.mobile_app_swaiphone
    data:
      title: '{{ title }}'
      message: '{{ message }}'
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 0.3
  mode: single
notify_people_who_are_present:
  alias: Notify people who are present
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ is_state(''person.stefan'', ''home'') }}'
      sequence:
      - service: notify.mobile_app_swaiphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ is_state(''person.julia'', ''home'') and is_state(''input_boolean.swa_debug_mode'',
          ''off'') }}'
      sequence:
      - service: notify.mobile_app_jphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ is_state(''person.anna'', ''home'') and is_state(''input_boolean.swa_debug_mode'',
          ''off'') }}'
      sequence:
      - service: notify.mobile_app_iphone_von_anna
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  mode: parallel
  max: 10
notify_people:
  alias: Notify people
  sequence:
  - choose:
    - conditions: '{{ 1==1 }}'
      sequence:
      - service: notify.mobile_app_swaiphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  - choose:
    - conditions: '{{ 1==1 and is_state(''input_boolean.swa_debug_mode'', ''off'')
        }}'
      sequence:
      - service: notify.mobile_app_jphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  - choose:
    - conditions: '{{ 1==1 and is_state(''input_boolean.swa_debug_mode'', ''off'')
        }}'
      sequence:
      - service: notify.mobile_app_iphone_von_anna
        data:
          title: '{{ title }}'
          message: '{{ message }}'
  mode: single
urgent_notify_people_who_are_present:
  alias: Notify people urgently who are present
  sequence:
  - choose:
    - conditions: '{{ is_state(''person.stefan'', ''home'') }}'
      sequence:
      - service: notify.mobile_app_swaiphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  - choose:
    - conditions: '{{ is_state(''person.julia'', ''home'') and is_state(''input_boolean.swa_debug_mode'',
        ''off'') }}'
      sequence:
      - service: notify.mobile_app_jphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  - choose:
    - conditions: '{{ is_state(''person.anna'', ''home'') and is_state(''input_boolean.swa_debug_mode'',
        ''off'') }}'
      sequence:
      - service: notify.mobile_app_iphone_von_anna
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  mode: single
urgent_notify_people:
  alias: Notify people urgently
  sequence:
  - choose:
    - conditions: '{{ 1==1 }}'
      sequence:
      - service: notify.mobile_app_swaiphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  - choose:
    - conditions: '{{ 1==1 and is_state(''input_boolean.swa_debug_mode'', ''off'')
        }}'
      sequence:
      - service: notify.mobile_app_jphone
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  - choose:
    - conditions: '{{ 1==1 and is_state(''input_boolean.swa_debug_mode'', ''off'')
        }}'
      sequence:
      - service: notify.mobile_app_iphone_von_anna
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0.3
  mode: single
erinnere_stefan_ans_trinken:
  alias: Erinnere Stefan ans Trinken
  sequence:
  - repeat:
      while:
      - condition: state
        entity_id: binary_sensor.stefan_working_in_office
        state: 'on'
      sequence:
      - delay:
          hours: 1
          minutes: 0
          seconds: 0
          milliseconds: 0
      - service: script.notify_stefan
        data:
          title: Hinweis
          message: Trink ein Glas Wasser
  mode: single
erinnere_stefan_ans_luften:
  alias: Erinnere Stefan ans Lüften
  sequence:
  - repeat:
      while:
      - condition: state
        entity_id: binary_sensor.stefan_working_in_office
        state: 'on'
      sequence:
      - delay:
          hours: 2
          minutes: 0
          seconds: 0
          milliseconds: 0
      - service: script.notify_stefan
        data:
          title: Hinweis
          message: Bitte einmal lüften.
  mode: single
call_stefan:
  alias: Call Stefan in the office
  sequence:
  - service: hassio.addon_stdin
    data:
      addon: 89275b70_dss_voip
      input:
        call_sip_uri: sip:**614@192.168.178.1:5060
        message_tts: Führe mich nicht in Versuchung.
        call_duration: '20'
  mode: single
call_anna_tisch_decken:
  alias: Call Anna Tisch decken
  sequence:
  - service: hassio.addon_stdin
    data:
      addon: 89275b70_dss_voip
      input:
        call_sip_uri: sip:**615@192.168.178.1:5060
        message_tts: Bitte runter kommen und Tisch decken.
        call_duration: '20'
  mode: single
schalte_aussenlicht_fur_5min_an:
  alias: Schalte Aussenlicht für 5min an
  sequence:
  - type: turn_on
    device_id: 5d726789f88ff8800753b26abd0bf956
    entity_id: switch.licht_aussen
    domain: switch
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - type: turn_off
    device_id: 5d726789f88ff8800753b26abd0bf956
    entity_id: switch.licht_aussen
    domain: switch
  mode: single
one_time_water_on:
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"wwonetime","data":1}'
  mode: single
  alias: Heating Water One-time On
one_time_water_off:
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"wwonetime","data":0}'
  mode: single
  alias: Heating Water One-time Off
heating_reset_offsets:
  alias: Heating Reset Offsets
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"offsettemp","data":0, "id":1}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"offsettemp","data":0, "id":2}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"offsettemp","data":0, "id":3}'
  mode: single
heating_burner_up:
  alias: Heating burner up
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"burnPeriod","data":10}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"boilHystOff","data":3}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"boilHystOn","data":-3}'
  mode: single
heating_burner_down:
  alias: Heating burner down
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"burnPeriod","data":45}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"boilHystOff","data":6}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"boilHystOn","data":-6}'
  mode: single
heating_summertemp_to_10:
  alias: Heating summertemp to 10
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":10, "id":1}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":10, "id":2}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":10, "id":3}'
  mode: single
heating_summertemp_to_17:
  alias: Heating summertemp to 17 hc1hc2
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":17, "id":1}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":17, "id":2}'
  mode: single
heating_summertemp_to_15:
  alias: Heating summertemp to 15 hc1hc2
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":15, "id":1}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":15, "id":2}'
  mode: single
heating_summertemp_to_12:
  alias: Heating summertemp to 12
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":12, "id":1}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":12, "id":2}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":12, "id":3}'
  mode: single
heating_summertemp_to_14:
  alias: Heating summertemp to 14 hc1hc2
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":14, "id":1}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":14, "id":2}'
  mode: single
heating_lowest_offsets:
  alias: Heating Lowest Offsets
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"offsettemp","data":-9, "id":1}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"offsettemp","data":-9, "id":2}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"offsettemp","data":-9, "id":3}'
  mode: single
heating_lower_offsets_hc1_hc2:
  alias: Heating Lower Offsets HC1 HC2
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"offsettemp","data":-3, "id":1}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"offsettemp","data":-3, "id":2}'
  mode: single
heating_comfort_temp15:
  alias: Heating Comfort Temp20
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"comforttemp","data":20, "id":1}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"comforttemp","data":20, "id":2}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"comforttemp","data":20, "id":3}'
  mode: single
heating_comfort_temp15_2:
  alias: Heating Comfort Temp18
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"comforttemp","data":18, "id":1}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"comforttemp","data":18, "id":2}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"comforttemp","data":18, "id":3}'
  mode: single
heating_manual_temp7:
  alias: Heating Manual Temp5
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"manualtemp","data":5, "id":1}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"manualtemp","data":5, "id":2}'
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"manualtemp","data":5, "id":3}'
  mode: single
heating_activated:
  alias: Heating Set Activated On
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"heatingactivated","data":"on"}'
  mode: single
heating_set_activated_off:
  alias: Heating Set Activated Off
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/boiler
      payload: '{"cmd":"heatingactivated","data":"off"}'
  mode: single
heating_hc1_mode_auto:
  alias: Heating hc1 mode auto
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"mode","data":"auto", "id":1}'
  mode: single
heating_hc1_mode_manual:
  alias: Heating hc1 mode manual
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"mode","data":"eco", "id":1}'
  mode: single
heating_summertemp_to_12_hc3:
  alias: Heating summertemp to 12 hc3
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"summertemp","data":12, "id":3}'
  mode: single
heating_set_offsets:
  alias: Heating Set Offsets
  sequence:
  - service: mqtt.publish
    data:
      topic: ems-esp/thermostat
      payload: '{"cmd":"offsettemp","data":3, "id":3}'
  mode: single
deconz_refresh:
  alias: deconz-refresh
  sequence:
  - service: deconz.device_refresh
    data:
      bridgeid: 00212E066FC0
  mode: single
deconz_removed_orphaned:
  alias: deconz-removed orphaned
  sequence:
  - service: deconz.remove_orphaned_entries
    data:
      bridgeid: 00212E066FC0
  mode: single
notify_stefan_heating:
  alias: Notify stefan heating
  sequence:
  - service: notify.mobile_app_swaiphone
    data:
      title: '{{ title }}'
      message: '{{ message }}'
  mode: queued
  max: 10
turn_on_ac_at_stefans_office:
  alias: Turn on AC at Stefans office
  sequence:
  - service: climate.set_fan_mode
    target:
      entity_id: climate.roofac
    data:
      fan_mode: low
  - service: climate.set_temperature
    target:
      entity_id: climate.roofac
    data:
      temperature: 26
      hvac_mode: cool
  mode: restart
turn_on_ac_at_parents_sleeping_room:
  alias: Turn on AC at parents sleeping room
  sequence:
  - service: climate.set_fan_mode
    data:
      fan_mode: low
    target:
      entity_id: climate.sleepac
  - service: climate.set_temperature
    target:
      entity_id:
      - climate.sleepac
    data:
      temperature: 24
      hvac_mode: cool
  mode: restart
run_poolpump_for_1h:
  sequence:
  - service: switch.turn_on
    target:
      entity_id: switch.shellys_poolpump
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    target:
      entity_id: switch.shellys_poolpump
  mode: single
  alias: Run poolpump for 1h
run_poolpump_for_2h:
  alias: Run poolpump for 2h
  sequence:
  - service: switch.turn_on
    target:
      entity_id: switch.shellys_poolpump
  - delay:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    target:
      entity_id: switch.shellys_poolpump
  mode: single
run_lufter_for_2h:
  alias: Run Luefter1 for 2h
  sequence:
  - service: switch.turn_on
    target:
      entity_id: switch.shellys_keller_luefter1
  - delay:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    target:
      entity_id: switch.shellys_keller_luefter1
  mode: single
dehumidify_basement:
  sequence:
  - service: notify.mobile_app_swaiphone
    data:
      title: Notification
      message: Running dehumidify_basement script
  - repeat:
      while:
      - condition: state
        entity_id: sensor.dew_runfan
        state: 'True'
      sequence:
      - service: notify.mobile_app_swaiphone
        data:
          title: Notification
          message: Running fans, run {{ repeat.index }}
      - service: counter.increment
        target:
          entity_id: counter.dew_fans
      - service: switch.turn_on
        target:
          entity_id: switch.shellys_keller_luefter1
      - delay: '{{ states(''input_number.dew_duration_fan'') | multiply(60) | int
          }}'
      - service: switch.turn_off
        target:
          entity_id: switch.shellys_keller_luefter1
      - delay: '{{ states(''input_number.dew_fan_wait'') | multiply(60) | int }}'
  mode: single
  alias: De-humidify basement
