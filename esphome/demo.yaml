#
# see https://github.com/geoffdavis/esphome-mitsubishiheatpump
#
substitutions:
  name: demo
  friendly_name: ${name}
  pulse_pin: GPIO12
  status_led: GPIO5
  
esphome:
  name: ${name}
  platform: ESP32
  board: esp-wrover-kit

wifi:
  ssid: !secret wlan_name
  password: !secret wlan_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} hotspot"
    password: "12345678"

captive_portal:

# Enable logging
logger:
  # ESP8266 only - disable serial port logging, as the HeatPump component
  # needs the sole hardware UART on the ESP8266
  # baud_rate: 0

# Enable Home Assistant API
api:

ota:

# Enable Web server.
web_server:
  port: 80

  # Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time

# Example configuration entry
switch:
  - platform: gpio
    pin: GPIO4
    name: "${friendly_name} RGB Green"
  - platform: gpio
    pin: GPIO2
    name: "${friendly_name} RGB Red"

output:
  # - platform: gpio
  #   pin: GPIO5
  #   id: output_blue
  - platform: gpio
    pin: GPIO2
    id: output_red
  - platform: gpio
    pin: GPIO4
    id: output_green
 
# Light 
light:
  - platform: binary
    internal: true
    id: led_red
    name: Red
    output: output_red
  - platform: binary
    internal: true
    id: led_green
    name: Green
    output: output_green   

# Status LED for connection
# see https://esphome.io/components/status_led.html
# Blink slowly (about every second) when a warning is active. Warnings are active when for example reading a sensor value fails temporarily or the WiFi/MQTT connections are disrupted.
# Blink quickly (multiple times per second) when an error is active. Errors indicate that ESPHome has found an error while setting up. In most cases, ESPHome will still try to recover from the error and continue with all other operations.
# Stay off otherwise.
status_led:
  pin:
    # Blue LED
    number: ${status_led}

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: ${name} ESPHome Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: ${name} IP
    ssid:
      name: ${name} SSID
    bssid:
      name: ${name} BSSID

# Sensors with general information.
sensor:
  # Uptime sensor.
  - platform: uptime
    name: ${name} Uptime

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: ${name} WiFi Signal
    update_interval: 60s

  # - platform: pulse_counter
    # pin: 21
    # name: "demo sensor"
    # update_interval : 60s
    # filters:
      # - lambda: |-
          # static float total_value = 0.0;
          # total_value += x * 0.01;
          # return total_value;
    # unit_of_measurement: "mÂ³"
    # accuracy_decimals: 2
    # icon: 'mdi:fire'