#
# see https://github.com/ginkage/MHI-AC-Ctrl-ESPHome
#
# swa 2022: file needs clean-up as name, devicename, etc are all over the place
# 
substitutions:
  name: roofac
  friendly_name: ${name}
  # Unique device ID in HA
  deviceid: "roofac"
  # Unique device name in HA (sensor names will be prefixed by this name)
  devicename: "roofac"  

esphome:
  name: ${name}
  platform: ESP8266
  board: d1_mini
  includes:
    - MHI-AC-Ctrl-ESPHome-master/mhi_ac_ctrl.h
    - MHI-AC-Ctrl-ESPHome-master/MHI-AC-Ctrl-core.h
    - MHI-AC-Ctrl-ESPHome-master/MHI-AC-Ctrl-core.cpp

wifi:
  ssid: !secret wlan_name
  password: !secret wlan_password
  manual_ip:
    # set in fritz.box
    static_ip: 192.168.178.44
    # Set this to the IP address of the router. Often ends with .1
    gateway: 192.168.178.1
    # The subnet of the network. 255.255.255.0 works for most home networks.
    subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} hotspot"
    password: "12345678"

captive_portal:

# Enable logging
logger:
  level: DEBUG
  baud_rate: 0

# 
globals:
  - id: room_temp_api_timeout
    type: int
    restore_value: no
    initial_value: '120'
    
# Enable Home Assistant API
api:
  reboot_timeout: 61s
  services:
    # Call the set_api_room_temperature service from HA to override the room temperature
    # If a new value has not been received after room_temp_api_timeout seconds, it will fall back to internal sensor
    - service: set_api_room_temperature
      variables:
        value: float
      then:
        - lambda: |-
            return ((MhiAcCtrl*)id(${deviceid}))->set_room_temperature(value);
            
# Enable OTA updates  
ota:

# Enable Web server.
web_server:
  port: 80

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time

#
binary_sensor:
  - platform: custom
    lambda: |-
      return ((MhiAcCtrl*)id(${deviceid}))->get_binary_sensors();

    binary_sensors:
      - name: ${devicename} defrost

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: ${name} ESPHome Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: ${name} IP
    ssid:
      name: ${name} SSID
    bssid:
      name: ${name} BSSID

# Sensors with general information.
sensor:
  # Uptime sensor.
  - platform: uptime
    name: ${name} Uptime

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: ${name} WiFi Signal
    update_interval: 60s
  - platform: custom
    lambda: |-
      return ((MhiAcCtrl*)id(${deviceid}))->get_sensors();

    # Sensor names in HA, you can change these if you want
    # Don't delete them or change their position in the list
    sensors:
      - name: ${devicename} error code
      - name: ${devicename} outdoor temperature
      - name: ${devicename} return air temperature
      - name: ${devicename} outdoor unit fan speed
      - name: ${devicename} indoor unit fan speed
      - name: ${devicename} current power
      - name: ${devicename} compressor frequency
      - name: ${devicename} indoor unit total run time
      - name: ${devicename} compressor total run time

climate:
  - platform: custom
    lambda: |-
      auto mhi_ac_ctrl = new MhiAcCtrl();
      App.register_component(mhi_ac_ctrl);
      return {mhi_ac_ctrl};
    climates:
      - name: "roofac"
        id: roofac
