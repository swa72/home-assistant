#
# see https://github.com/ginkage/MHI-AC-Ctrl-ESPHome
#
# 
substitutions:
  name: roofac
  friendly_name: ${name}
  # Unique device ID in HA
  deviceid: ${name}
  # Unique device name in HA (sensor names will be prefixed by this name)
  devicename: ${name}

#  
esphome:
  name: ${name}
  platform: ESP8266
  board: d1_mini
  platformio_options:
    # Run CPU at 160Mhz to fix mhi_ac_ctrl_core.loop error: -2
    board_build.f_cpu: 160000000L  
  includes:
    - MHI-AC-Ctrl-ESPHome-master-08-2024/mhi_ac_ctrl.h
    - MHI-AC-Ctrl-ESPHome-master-08-2024/MHI-AC-Ctrl-core.h
    - MHI-AC-Ctrl-ESPHome-master-08-2024/MHI-AC-Ctrl-core.cpp

#
packages:
  # Comment if you encounter mhi_ac_ctrl_core.loop error: -2 errors and uncomment the legacy_framesize file
  mhi-ac-ctrl: !include MHI-AC-Ctrl-ESPHome-master-08-2024/conf/large_framesize.yaml

#
wifi:
  ssid: !secret wlan_name
  password: !secret wlan_password
  manual_ip:
    # set in fritz.box
    static_ip: 192.168.178.44
    # Set this to the IP address of the router. Often ends with .1
    gateway: 192.168.178.1
    # The subnet of the network. 255.255.255.0 works for most home networks.
    subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} hotspot"
    password: "12345678"

#
captive_portal:

# Enable logging
logger:
  level: DEBUG
  baud_rate: 0
# https://github.com/ginkage/MHI-AC-Ctrl-ESPHome/issues/61  
  logs:
    component: ERROR  

# Enable OTA updates  
ota:
  - platform: esphome
  
#
button:
 - platform: restart
   name: Restart
   entity_category: diagnostic 
    
# Enable Home Assistant API
api:
  reboot_timeout: 0s
  services:
    # Call the set_api_room_temperature service from HA to override the room temperature
    # If a new value has not been received after room_temp_api_timeout seconds, it will fall back to internal sensor
    - service: set_api_room_temperature
      variables:
        value: float
      then:
        - lambda: |-
            return ((MhiAcCtrl*)id(${deviceid}))->set_room_temperature(value);
    # Call the set_vanes service from HA to set the vane position
    # Needed because the ESPHome Climate class does not support this natively
    # Possible values: 1-4: static positions, 5: swing, 0: unknown
    - service: set_vanes
      variables:
        value: int
      then:
        - lambda: |-
            return ((MhiAcCtrl*)id(${deviceid}))->set_vanes(value);
            

# Enable Web server.
web_server:
  port: 80

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time

#
binary_sensor:
  - platform: custom
    lambda: |-
      return ((MhiAcCtrl*)id(${deviceid}))->get_binary_sensors();
    binary_sensors:
#      - name: ${devicename} defrost

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: ${name} ESPHome Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: ${name} IP
    ssid:
      name: ${name} SSID
    bssid:
      name: ${name} BSSID

# Sensors with general information.
sensor:
  # Uptime sensor.
  - platform: uptime
    name: ${name} Uptime

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: ${name} WiFi Signal
    update_interval: 60s
    
  - platform: custom
    lambda: |-
      return ((MhiAcCtrl*)id(${deviceid}))->get_sensors();
    # Sensor names in HA, you can change these if you want
    # Don't delete them or change their position in the list
    sensors:
#      - name: ${devicename} error code
#      - name: ${devicename} outdoor temperature
#      - name: ${devicename} return air temperature
#      - name: ${devicename} outdoor unit fan speed
#      - name: ${devicename} indoor unit fan speed
#      - name: ${devicename} current power
#      - name: ${devicename} compressor frequency
#      - name: ${devicename} indoor unit total run time
#      - name: ${devicename} compressor total run time

